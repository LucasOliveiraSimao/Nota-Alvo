name: Android Build Pipeline

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1

      - name: Cache Gradle and Java
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
            ~/.m2/repository
            ~/.java
          key: ${{ runner.os }}-gradle-java-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-java-

      - name: Setup JDK 17
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant Execute Permission for Gradlew
        run: chmod +x gradlew

      - name: Load Google Service File
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Decode and Save Keystore File
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE }}
        run: |
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/key_app_nota_alvo.jks

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties
          echo "ADMOB_APP_ID_APPLICATION=${{ secrets.ADMOB_APP_ID_APPLICATION }}" >> local.properties
          echo "ADMOB_APP_ID_TEST=${{ secrets.ADMOB_APP_ID_TEST }}" >> local.properties
          echo "ADMOB_APP_ID_PROD=${{ secrets.ADMOB_APP_ID_PROD }}" >> local.properties
          echo "storeFile=key_app_nota_alvo.jks" >> app/keystore.properties
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/keystore.jks
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> app/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties

      - name: Run Lint Analysis
        run: ./gradlew lintDebug

      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: Lint Report
          path: app/build/reports/lint-results-debug.html

  unit-tests:
    needs: [ lint ]
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1

      - name: Cache Gradle and Java
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
            ~/.m2/repository
            ~/.java
          key: ${{ runner.os }}-gradle-java-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-java-

      - name: Setup JDK 17
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant Execute Permission for Gradlew
        run: chmod +x gradlew
 
      - name: Load Google Service File
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Decode and Save Keystore File
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE }}
        run: |
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/key_app_nota_alvo.jks
      
      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties
          echo "ADMOB_APP_ID_APPLICATION=${{ secrets.ADMOB_APP_ID_APPLICATION }}" >> local.properties
          echo "ADMOB_APP_ID_TEST=${{ secrets.ADMOB_APP_ID_TEST }}" >> local.properties
          echo "ADMOB_APP_ID_PROD=${{ secrets.ADMOB_APP_ID_PROD }}" >> local.properties
          echo "storeFile=key_app_nota_alvo.jks" >> app/keystore.properties
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/keystore.jks
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> app/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties

      - name: Execute Unit Tests
        run: ./gradlew test

      - name: Upload Unit Test Report
        uses: actions/upload-artifact@v4
        with:
          name: Unit Test Report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumented-tests:
    needs: [ unit-tests ]
    name: Run Instrumented Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1

      - name: Cache Gradle and Java
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
            ~/.m2/repository
            ~/.java
          key: ${{ runner.os }}-gradle-java-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-java-

      - name: Setup JDK 17
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant Execute Permission for Gradlew
        run: chmod +x gradlew

      - name: Load Google Service File
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Decode and Save Keystore File
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE }}
        run: |
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/key_app_nota_alvo.jks

      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties
          echo "ADMOB_APP_ID_APPLICATION=${{ secrets.ADMOB_APP_ID_APPLICATION }}" >> local.properties
          echo "ADMOB_APP_ID_TEST=\"${{ secrets.ADMOB_APP_ID_TEST }}\"" >> local.properties
          echo "ADMOB_APP_ID_PROD=\"${{ secrets.ADMOB_APP_ID_PROD }}\"" >> local.properties
          echo "storeFile=key_app_nota_alvo.jks" >> app/keystore.properties
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/keystore.jks
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> app/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          
      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
          
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
          
      - name: Run Instrumented Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck

      - name: Upload Instrumented Test Report
        uses: actions/upload-artifact@v4
        with:
          name: Instrumented Test Report
          path: app/build/reports/androidTests/connected/

  build:
    needs: [ instrumented-tests ]
    name: Build Android App Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.1

      - name: Cache Gradle and Java
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
            ~/.m2/repository
            ~/.java
          key: ${{ runner.os }}-gradle-java-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-java-

      - name: Setup JDK 17
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant Execute Permission for Gradlew
        run: chmod +x gradlew

      - name: Load Google Service File
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Decode and Save Keystore File
        env:
          KEYSTORE_FILE_BASE64: ${{ secrets.KEYSTORE }}
        run: |
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/key_app_nota_alvo.jks
      
      - name: Create local.properties
        run: |
          echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties
          echo "ADMOB_APP_ID_APPLICATION=${{ secrets.ADMOB_APP_ID_APPLICATION }}" >> local.properties
          echo "ADMOB_APP_ID_TEST=${{ secrets.ADMOB_APP_ID_TEST }}" >> local.properties
          echo "ADMOB_APP_ID_PROD=${{ secrets.ADMOB_APP_ID_PROD }}" >> local.properties
          echo "storeFile=key_app_nota_alvo.jks" >> app/keystore.properties
          echo "$KEYSTORE_FILE_BASE64" | base64 --decode > app/keystore.jks
          echo "storePassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> app/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> app/keystore.properties

      - name: Generate Android App Bundle
        run: ./gradlew bundleRelease
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Android Bundle
        uses: actions/upload-artifact@v4
        with:
          name: Artifact Version
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Clean up
        run: rm app/keystore.jks
